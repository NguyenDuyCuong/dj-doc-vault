services:
  dashboard:
    image: ${DOCKER_REGISTRY-}blazorserver
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - UseInMemoryDatabase=false
      - DatabaseSettings__DBProvider=mssql
      - DatabaseSettings__ConnectionString=Server=sqldb,1433;Database=BlazorDashboardDb;User Id=sa;Password=Password@123;MultipleActiveResultSets=true;TrustServerCertificate=True
      - AppConfigurationSettings__ApplicationUrl=
      - SmtpClientOptions__Server=
      - SmtpClientOptions__Port=25
      - SmtpClientOptions__User=
      - SmtpClientOptions__Password=
      - SmtpClientOptions__DefaultFromEmail=noreply@blazorserver.com
      - Authentication__Microsoft__ClientId=***
      - Authentication__Microsoft__ClientSecret=***
      - Authentication__Google__ClientId=***
      - Authentication__Google__ClientSecret=***
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=rOCywhBUFFXUbC7p4RlX
      - Minio__SecretKey=LDcvslO22UfNJLjdyFC3yi8RU6XliCxQgxX0joVY
      - Minio__BucketName=files
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTPS_PORTS=443
      - ASPNETCORE_URLS=https://+:443;http://+:80;https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Password@123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/https/DocVault.Server.UI.pfx
    volumes:
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets:ro
      - ~/.aspnet/https:/root/.aspnet/https:ro
    ports:
      - "5000:80"
      - "5001:443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      sqldb:
        condition: service_healthy
      seq:
        condition: service_started   
      minio:
        condition: service_healthy
    restart: on-failure

  sqldb:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    hostname: sqldb      
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'Password@123' -C -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

    environment:
      - MSSQL_SA_PASSWORD=Password@123
      - ACCEPT_EULA=Y
      - MSSQL_DATA_DIR=/var/opt/mssql/data
      - MSSQL_LOG_DIR=/var/opt/mssql/log
      - MSSQL_BACKUP_DIR=/var/opt/mssql/backup
    ports:
      - 1433:1433
    volumes:
      - ${USERPROFILE}\mssql_data:/var/opt/mssql/data
      - ${USERPROFILE}\mssql_log:/var/opt/mssql/log
      - ${USERPROFILE}\mssql_backup:/var/opt/mssql/backup
  
  seq:
    image: datalust/seq:latest
    restart: unless-stopped
    mem_limit: 5g
    memswap_limit: 5g
    volumes:
      - seqdata:/data
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 8020:80
      - 5341:5341
   
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - storage:/data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=Password@123
      - MINIO_ACCESS_KEY=rOCywhBUFFXUbC7p4RlX
      - MINIO_SECRET_KEY=LDcvslO22UfNJLjdyFC3yi8RU6XliCxQgxX0joVY
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  ngrok:
    image: ngrok/ngrok
    depends_on:
      dashboard:
        condition: service_healthy
    environment:
      NGROK_AUTHTOKEN: 2x4OF6OGqFQqz3srHoLvdGJmxTL_spsU9fAxfwoCtrMBBDMV
    command: http dashboard:5000
    ports:
      - "4040:4040"  # Giao diện web của ngrok để xem tunnels

volumes:
  mssql_data:
  mssql_log:
  mssql_backup:
  seqdata:
  storage: